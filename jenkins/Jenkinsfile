pipeline {
    agent any

    stages {
        stage('Clone Bitbucket Repo') {
            steps {
                git branch: 'main', credentialsId: 'bitbucket', url: 'git@bitbucket.org:booking_devops/booking_dev.git'
            }
        }

        stage('Clone GitHub Repo for Docker Compose') {
            steps {
                // We clone the repository from GitHub to get the required docker-compose.yml
                git branch: 'main', credentialsId: 'github-credentials-id', url: 'git@github.com:RybenLigst/DIPLOM.git'
            }
        }

        stage('Build Docker Images') {
            steps {
                script {
                    // We use docker-compose.yml from the GitHub repository
                    sh 'docker-compose -f /DIPLOM/jenkins/docker-compose.yml build'
                }
            }
        }

        stage('Push Images to Docker Hub') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerhub') {
                        sh """
                        docker tag booking_dev-app flappimen/booking_dev-app:latest
                        docker push flappimen/booking_dev-app:latest

                        docker tag postgres:16.1 flappimen/postgres:16.1
                        docker push flappimen/postgres:16.1

                        docker tag tanmos/booking_client flappimen/booking_client:latest
                        docker push flappimen/booking_client:latest
                        """
                    }
                }
            }
        }
    }

    post {
        always {
            script {
                // Clean up old builds
                def numBuildsToKeep = 5
                currentBuild.rawBuild.getProject().getBuilds().findAll {
                    it.number < currentBuild.number - numBuildsToKeep
                }.each {
                    it.delete()
                }
            }
        }
    }
}
